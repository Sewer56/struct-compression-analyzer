version: '1.0'
metadata:
  name: BC7 Mode0 Blocks (with Partition)
  description: |
    Analysis schema BC7 block format. 
    This one focuses on 'Mode0' blocks https://learn.microsoft.com/en-us/windows/win32/direct3d11/bc7-format-mode-reference#mode-0 .
    With an additional filter for only a certain partition within Mode0 blocks.
    Adjust partition in root group using `skip_if_not`

conditional_offsets:
  # BC7 format detection (UNORM)
  - offset: 0x94  # BC7 data starts at 148 bytes
    conditions:
      - byte_offset: 0x00 # file magic
        bit_offset: 0
        bits: 32
        value: 0x44445320 # DDS magic
      - byte_offset: 0x54 # ddspf.dourCC
        bit_offset: 0
        bits: 32
        value: 0x44583130 # DX10 header
      - byte_offset: 0x80 # ds_header_dxt10.dxgiFormat
        bit_offset: 0
        bits: 32
        value: 0x62000000 # DXGI_FORMAT_BC7_UNORM
  # BC7 format detection (UNORM_SRGB)
  - offset: 0x94  # BC7 data starts at 148 bytes
    conditions:
      - byte_offset: 0x00 # file magic
        bit_offset: 0
        bits: 32
        value: 0x44445320 # DDS magic
      - byte_offset: 0x54 # ddspf.dourCC
        bit_offset: 0
        bits: 32
        value: 0x44583130 # DX10 header
      - byte_offset: 0x80 # ds_header_dxt10.dxgiFormat
        bit_offset: 0
        bits: 32
        value: 0x63000000 # DXGI_FORMAT_BC7_UNORM_SRGB

analysis:
  split_groups:
    
    # Stuff that never works well. Commented out.

    #- name: separate_endpoints_bits
    #  group_1: [colors]   # Base group to compare against.
    #  group_2: [R0, G0, B0, R1, G1, B1, R2, G2, B2, R3, G3, B3, R4, G4, B4, R5, G5, B5]  # Derived group to compare with.
    #  description: Compare regular colour format ([r0-r5,g0-g5,b0-b5]) against a 'per-endpoint' split ([r0,g0,b0,r1,g1,b1,r2,g2,b2,r3,g3,b3,r4,g4,b4,r5,g5,b5]).

    #- name: separate_endpoints_bits_2
    #  group_1: [colors]   # Base group to compare against.
    #  group_2: [R0, R1, G0, G1, B0, B1, R2, R3, G2, G3, B2, B3, R4, R5, G4, G5, B4, B5]  # Derived group to compare with.
    #  description: Compare regular colour format ([r0-r5,g0-g5,b0-b5]) against a 'per-endpoint' split ([r0,r1,g0,g1,b0,b1,r2,r3,g2,g3,b2,b3,r4,r5,g4,g5,b4,b5]).

    # - name: per_channel_colors
    #  group_1: [colors]   # Base group to compare against.
    #  group_2: [r, g, b]  # Derived group to compare with.
    #  description: Compare regular colour format ([r,g,b]) against making separate per color 'channel' arrays ([r,r,r ... g,g,g... b,b,b... ]).

root:
  type: group
  # Filter out to only Mode0 blocks, with start with a single '1' bit.
  # https://learn.microsoft.com/en-us/windows/win32/direct3d11/bc7-format-mode-reference#mode-0
  skip_if_not: 
  - byte_offset: 0
    bit_offset: 0
    bits: 1
    value: 1
  - byte_offset: 0
    bit_offset: 1 # partition
    bits: 4
    bit_order: lsb
    value: 13 # change partition number here

  bit_order: lsb # little endian bit order.

  # Note: We filter out at root, so `mode0_block` reports the correct size of only Mode0 blocks
  #       in the file.
  fields:
    mode0_block:
      type: group
      fields:
        mode: 1       # 1-bit mode field
        partition: 4  # 4-bit partition field
        
        colors:
          type: group
          description: All color components
          fields:
            r:
              type: group
              fields:
                R0: 4
                R1: 4
                R2: 4
                R3: 4
                R4: 4
                R5: 4
            
            g:
              type: group
              fields:
                G0: 4
                G1: 4
                G2: 4
                G3: 4
                G4: 4
                G5: 4
            
            b:
              type: group
              fields:
                B0: 4
                B1: 4
                B2: 4
                B3: 4
                B4: 4
                B5: 4

        p_bits:
          type: group
          description: P-bits flags
          fields:
            P0: 1
            P1: 1
            P2: 1
            P3: 1
            P4: 1
            P5: 1

        index:
          type: group
          description: 45-bit index field divided into 3-bit segments
          skip_frequency_analysis: true # Super random, basically max entropy, expensive to compute, not worth computing.
          fields:
            index0: 3
            index1: 3
            index2: 3
            index3: 3
            index4: 3
            index5: 3
            index6: 3
            index7: 3
            index8: 3
            index9: 3
            index10: 3
            index11: 3
            index12: 3
            index13: 3
            index14: 3